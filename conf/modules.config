/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {
    withName: 'SAVE_REFERENCE' {
        publishDir = [
            path: { "${params.outdir}/reference" },
            mode: "copy",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: (params.fasta && params.gff)
        ]
    }
}

process {
    withName: 'FASTQC' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/fastqc" },
            mode: "copy",
            saveAs: {filename -> filename.indexOf(".zip") > 0 ? "zips/$filename" : "$filename"}
        ]
    }
}

process {
    withName: 'TRIMGALORE' {
        ext.args = '--fastqc'
        publishDir = [
            path: { "${params.outdir}/trim_galore" },
            mode: "copy",
            saveAs: {filename ->
                if (filename.indexOf("_fastqc") > 0) "FastQC/$filename"
                else if (filename.indexOf("trimming_report.txt") > 0) "logs/$filename"
                else params.saveTrimmed ? filename : null
            }
        ]
    }
}

process {
    withName: 'KRAKEN' {
        publishDir = [
            path: { "${params.outdir}/kraken" },
            mode: "copy"
        ]
    }
}

process {
    withName: 'SATURATION' {
        publishDir = [
            path: { "${params.outdir}/saturation" },
            mode: "copy"
        ]
    }
}

process {
    withName: 'GET_SOFTWARE_VERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: "copy",
            pattern: '*_versions.yml'
        ]
    }
}

process {
    withLabel: 'QUAST' {
        ext.args = '-m 200'
        publishDir = [
            path: { "${params.outdir}/quast" },
            mode: "copy"
        ]
    }
}

process {
    withName: 'SAMTOOLS' {
        publishDir = [
            path: { "${params.outdir}/bowtie2" },
            mode: "copy",
            saveAs: { filename ->
                    if (filename.indexOf(".stats.txt") > 0) "stats/$filename"
                    else if (filename.indexOf("_bins.txt") > 0) filename
                    else if (filename.indexOf("_pdrc.pdf") > 0) filename
                    else params.saveAlignedIntermediates ? filename : null
                }
        ]
    }
}

process {
    withName: 'PRESEQ' {
        publishDir = [
            path: { "${params.outdir}/preseq" },
            mode: "copy",
            saveAs: { filename ->
                    if (filename.indexOf(".txt") > 0) filename
                    else if (filename.indexOf(".pdf") > 0) filename
                    else null }
        ]
    }
}

// Alignment options
process {
    withName: "MINIMAP2_ALIGN" {
        publishDir = [
            path: { params.saveAlignedIntermediates ? "${params.outdir}/bowtie2" : params.outdir },
            mode: "copy",
            saveAs: { filename -> params.saveAlignedIntermediates ? filename : null }
        ]
    }

    withName: "BOWTIE2_ALIGN" {
        publishDir = [
            path: { params.saveAlignedIntermediates ? "${params.outdir}/bowtie2" : params.outdir },
            mode: "copy",
            saveAs: { filename -> params.saveAlignedIntermediates ? filename : null }
        ]
    }
}

process {
    withName: "QUALIMAP_BAMQC" {
        publishDir = [
            path: { "${params.outdir}/qualimap_bamqc" },
            mode: "copy"
        ]
    }
}

process {
    withName: "INDELREALIGN" {
        publishDir = [
            path: { "${params.outdir}/indelrealign" },
            mode: "copy"
        ]
    }
}

process {
    withName: "VG_CONSTRUCT" {
        publishDir = [
            path: { "${params.outdir}/vg/construct" },
            mode: "copy"
        ]
    }

    withName: "VG_INDEX" {
        publishDir = [
            path: { "${params.outdir}/vg/index" },
            mode: "copy"
        ]
    }

    withName: "VG_CALL" {
        publishDir = [
            path: { "${params.outdir}/vg/vcf" },
            mode: "copy"
        ]
    }
}

process {
    withName: "MONOVAR" {
        publishDir = [
            path: { "${params.outdir}/monovar" },
            mode: "copy",
            saveAs: { filename ->
                    if (filename.indexOf(".vcf") > 0) "$filename" else null }
        ]
    }
}

process {
    withName: "ANEUFINDER" {
        publishDir = [
            path: { "${params.outdir}/gatk" },
            mode: "copy"
        ]
    }
}

process {
    withName: "CIRCLIZE" {
        publishDir = [
            path: { "${params.outdir}/circlize" },
            mode: "copy",
            saveAs: { filename ->
                if (filename.indexOf(".bed") > 0) "$filename" else null
            }
        ]
    }
}

process {
    withName: "CANU" {
        publishDir = [
            path: { "${params.outdir}/spades" },
            mode: "copy"
        ]
    }

    withName: "SPADES" {
        publishDir = [
            path: { "${params.outdir}/spades" },
            mode: "copy"
        ]
    }
}

process {
    withName: "REMAP" {
        publishDir = [
            path: { "${params.outdir}/remap" },
            mode: "copy"
        ]
    }
}

process {
    withName: "CHECKM_LINEAGEWF" {
        publishDir = [
            path: { "${params.outdir}/CheckM" },
            mode: "copy"
        ]
    }
}

process {
    withName: "BLASTN" {
        publishDir = [
            path: { "${params.outdir}/blob" },
            mode: "copy"
        ]
    }

    withName: "DIAMOND_BLASTX" {
        publishDir = [
            path: { "${params.outdir}/blob" },
            mode: "copy"
        ]
    }

    withName: "BLOBTOOLS" {
        publishDir = [
            path: { "${params.outdir}/blob" },
            mode: "copy"
        ]
    }
}

process {
    withName: "REBLOBTOOLS" {
        publishDir = [
            path: { "${params.outdir}/reblob" },
            mode: "copy"
        ]
    }
}

process {
    withName: "ACDC" {
        publishDir = [
            path: { "${params.outdir}/acdc" },
            mode: "copy"
        ]
    }
}

process {
    withName: "TSNE" {
        publishDir = [
            path: { "${params.outdir}/tsne" },
            mode: "copy"
        ]
    }
}

process {
    withName: "PROKKA" {
        publishDir = [
            path: { "${params.outdir}/prokka" },
            mode: "copy"
        ]
    }
}

process {
    withName: "PRODIGAL" {
        publishDir = [
            path: { "${params.outdir}/prodigal" },
            mode: "copy"
        ]
    }
}

process {
    withName: "AUGUSTUS" {
        publishDir = [
            path: { "${params.outdir}/augustus" },
            mode: "copy"
        ]
    }
}

process {
    withName: "EUKCC" {
        publishDir = [
            path: { "${params.outdir}/eukcc" },
            mode: "copy"
        ]
    }
}

process {
    withName: "EGGNOG" {
        publishDir = [
            path: { "${params.outdir}/eggnog" },
            mode: "copy"
        ]
    }
}

process {
    withName: "KOFAMSCAN" {
        publishDir = [
            path: { "${params.outdir}/kofam" },
            mode: "copy"
        ]
    }
}

process {
    withName: "STARAMR" {
        publishDir = [
            path: { "${params.outdir}/ARG" },
            mode: "copy"
        ]
    }
}

process {
    withName: "SPLIT_CHECKM" {
        publishDir = [
            path: { "${params.outdir}/" },
            mode: "copy"
        ]
    }

    withName: "SPLIT_CHECKM_EUKCC" {
        publishDir = [
            path: { "${params.outdir}/" },
            mode: "copy"
        ]
    }
}

process {
    withName: "MULTIQC" {
        publishDir = [
            path: { "${params.outdir}/MultiQC" },
            mode: "copy"
        ]
    }
}
