/*
 * -------------------------------------------------
 *  gongyh/nf-core-scgs Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

process {

  // nf-core: Check the defaults for all processes
  cpus = { 1 * task.attempt }
  memory = { 8.GB * task.attempt }
  time = { 12.h * task.attempt }

  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  // Process-specific resource requirements
  // nf-core: Customise requirements for specific processes.
  // See https://www.nextflow.io/docs/latest/config.html#config-process-selectors
  withName: TRIMGALORE {
    cpus = { 16 * task.attempt }
    memory = { 8.GB * task.attempt }
    time = { 16.h * task.attempt }
  }
  withName: KTUPDATETAXONOMY {
    cpus = { 32 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 6.h * task.attempt }
  }
  withName: KRAKEN {
    cpus = { 32 * task.attempt }
    memory = { 80.GB * task.attempt }
    time = { 6.h * task.attempt }
  }
  withName: SATURATION {
    cpus = { 32 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 6.h * task.attempt }
    errorStrategy = 'ignore'
  }
  withName: BBMAP_ALIGN {
    cpus = { 32 * task.attempt }
    memory = { 120.GB * task.attempt }
    time = { 16.h * task.attempt }
  }
  withName: BOWTIE2_ALIGN {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: MINIMAP2_ALIGN {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: SAMTOOLS {
    cpus = { 1 * task.attempt, 'cpus' }
    memory = { 40.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: CIRCLIZE {
    cpus = { 2 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: INDELREALIGN {
    cpus = { 2 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: MONOVAR {
    cpus = { 2 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: DOUBLETD {
    cpus = { 2 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: ANEUFINDER {
    cpus = { 2 * task.attempt }
    memory = { 48.GB * task.attempt }
    time = { 16.h * task.attempt }
    errorStrategy = 'ignore'
  }
  withName: PRESEQ {
    cpus = { 2 * task.attempt }
    memory = { 8.GB * task.attempt }
    time = { 16.h * task.attempt }
    errorStrategy = 'ignore'
  }
  withName: QUALIMAP_BAMQC {
    cpus = { 32 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 16.h * task.attempt }
  }
  //  withName: NORMALIZE {
  //    cpus = { 4 * task.attempt }
  //    memory = { 32.GB * task.attempt }
  //    time = { 12.h * task.attempt }
  //  }
  withName: BBNORM {
    cpus = { 32 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 16.h * task.attempt }
  }
  withName: SPADES {
    maxForks = 1
    cpus = { 48 * task.attempt }
    memory = { 250.GB * task.attempt }
    time = { 48.h * task.attempt }
  }
  withName: CANU {
    maxForks = 2
    cpus = { 28 * task.attempt }
    memory = { 128.GB * task.attempt }
    time = { 48.h * task.attempt }
  }
  withName: REMAP {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: GENOMAD_ENDTOEND {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: COMPLETENESS {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: TREE {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: BLASTN {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: DIAMOND_BLASTX {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: SPLIT_CHECKM {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: SPLIT_CHECKM_EUKCC {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: GTDBTK {
    cpus = { 32 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: BLOBTOOLS {
    cpus = { 1 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: REBLOBTOOLS {
    cpus = { 1 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: CHECKM_LINEAGEWF {
    cpus = { 32 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: CHECKM2 {
    cpus = { 32 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: EUKCC {
    cpus = { 32 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 24.h * task.attempt }
    errorStrategy = 'ignore'
  }
  withName: ACDC {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 24.h * task.attempt }
    errorStrategy = 'ignore'
  }
  withName: TSNE {
    cpus = { 12 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: QUAST_REF {
    cpus = { 24 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: QUAST_DENOVO {
    cpus = { 24 * task.attempt }
    memory = { 32.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: PROKKA {
    cpus = { 24 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: AUGUSTUS {
    cpus = { 24 * task.attempt }
    memory = { 64.GB * task.attempt }
    time = { 24.h * task.attempt }
  }
  withName: EGGNOG {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: KOFAMSCAN {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: STARAMR {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: PANTA {
    cpus = { 32 * task.attempt }
    memory = { 40.GB * task.attempt }
    time = { 6.h * task.attempt }
  }
  withName: PASA {
    cpus = { 32 * task.attempt }
    memory = { 40.GB * task.attempt }
    time = { 6.h * task.attempt }
  }
  withName: GRAPHBIN {
    cpus = { 24 * task.attempt }
    memory = { 16.GB * task.attempt }
    time = { 8.h * task.attempt }
  }
  withName: GET_SOFTWARE_VERSIONS {
    cpus = { 2 * task.attempt }
    memory = { 8.GB * task.attempt }
  }
  withName: MULTIQC {
    memory = { 4.GB * task.attempt }
  }
}

executor {
  $local {
    cpus = 60
    queueSize = 10
    memory = 300.GB
    time = 480.h
  }
}

params {
  // Defaults only, expecting to be overwritten
  igenomes_base = 's3://ngi-igenomes/igenomes/'
}
